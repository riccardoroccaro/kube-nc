apiVersion: v1
kind: Namespace
metadata:
  name: longhorn-crypto
---
apiVersion: v1
kind: Secret
metadata:
  name: longhorn-crypto
  namespace: longhorn-crypto
stringData:
  CRYPTO_KEY_VALUE: "t0p-Secret-Password"
  CRYPTO_KEY_PROVIDER: "secret"
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: longhorn-crypto
provisioner: driver.longhorn.io
allowVolumeExpansion: true
reclaimPolicy: Delete
volumeBindingMode: Immediate
parameters:
  numberOfReplicas: "1"
  staleReplicaTimeout: "2880"
  fromBackup: ""
  fsType: "ext4"
  encrypted: "true"
  csi.storage.k8s.io/provisioner-secret-name: ${pvc.name}
  csi.storage.k8s.io/provisioner-secret-namespace: ${pvc.namespace}
  csi.storage.k8s.io/node-publish-secret-name: ${pvc.name}
  csi.storage.k8s.io/node-publish-secret-namespace: ${pvc.namespace}
  csi.storage.k8s.io/node-stage-secret-name: ${pvc.name}
  csi.storage.k8s.io/node-stage-secret-namespace: ${pvc.namespace}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: longhorn-crypto
  namespace: longhorn-crypto
spec:
  storageClassName: longhorn-crypto
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Pod
metadata:
  name: longhorn-crypto
  namespace: longhorn-crypto
  labels:
    app: longhorn-crypto
spec:
  restartPolicy: Never
  containers:
  - name: longhorn-crypto
    image: nginx:latest
    volumeMounts:
    - mountPath: /root/test
      name: longhorn-crypto-volume
  volumes:
  - name: longhorn-crypto-volume
    persistentVolumeClaim:
      claimName: longhorn-crypto
